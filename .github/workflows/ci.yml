---
name: Continuous Integration

on:  # yamllint disable-line rule:truthy
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  FORCE_COLOR: true

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: "3.10"

    permissions:
      # Additional permission needed to update preview app
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: |
            setup.*
            pyproject.toml
            dev-requirements.txt
            .pre-commit-config.yaml

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version-file: '.nvmrc'
          cache-dependency-path: frontend/yarn.lock

      - name: Create development environment
        run: |
          ./dev.py py-create-venv
          source ./venv/bin/activate
          echo "PATH=$PATH" >> "$GITHUB_ENV"
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> "$GITHUB_ENV"
          echo "Installed dependencies:"
          pip freeze

      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files

      - name: Test javascript code
        run: ./dev.py js-test

      - name: Test python code
        run: ./dev.py py-test

      - name: Ensure browsers are installed
        run: playwright install chromium --with-deps

      - name: Build frontend
        run: ./dev.py js-build

      - name: Run e2e tests
        run: pytest e2e --reruns 5

      - name: Upload snapshots
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: Snapshots
          path: e2e/__snapshots__
          if-no-files-found: error

      - name: Build package
        run: ./dev.py package

      - name: Verify package
        run: tar -tvf dist/streamlit_ketcher-*.tar.gz | grep NOTICES

      - run: mkdir -p "$(yarn cache dir)"

      - name: Upload WHL file
        uses: actions/upload-artifact@v3
        with:
          name: WHL file
          path: dist/*.whl
          if-no-files-found: error

      - name: Checkout code
        uses: actions/checkout@v4
        if: |
          github.repository == 'mik-laj/streamlit-ketcher' &&
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main'
        with:
          ref: ${{ github.event.repository.default_branch }}
          persist-credentials: 'true'
          path: 'component-preview'

      - name: Deploy preview to ${{ env.TARGET_BRANCH }}
        if: |
          github.repository == 'mik-laj/streamlit-ketcher' &&
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main'
        run: |
          set -x;
          (
            cd component-preview;
            git checkout --orphan "${TARGET_BRANCH}";
            git rm --cached -r .;
            git clean -f -d
          )
          cp dist/streamlit_ketcher-*.whl component-preview/
          cp streamlit_app.py component-preview/

          (
          cd component-preview/;
          git status;
          git config --local user.email \
            "41898282+github-actions[bot]@users.noreply.github.com";
          git config --local user.name "github-actions[bot]";
          ls streamlit_ketcher-*.whl > requirements.txt;
          git add .;
          git commit --all --message "\
          Updating constraints. Github run id: ${GITHUB_RUN_ID}

          This update is automatically committed by the CI based on
          '${GITHUB_REF}' in the '${GITHUB_REPOSITORY}' repository with
          commit sha ${GITHUB_SHA}.
          The action that build those constraints can be found at
          https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/
          "
          git push --force "origin" "HEAD:${TARGET_BRANCH}";
          )
        env:
          TARGET_BRANCH: 'deploy-branch'
